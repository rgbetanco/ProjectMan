@model projectman.Models.Project
@using CSHelper.Extensions
@{
    ViewData["Title"] = "新增專案";
    ViewData["AutoReload"] = true;
    Layout = "_Layout";
    
}

<div class="container mt-4">
    <h2>@ViewData["Title"]</h2>
    <form id="update" asp-action="New">
        <!-- Store/History buttons -->
        <div class="row">
            <div class="col">
                <button type="button" class="btn btn-light btn-back"><span class="fa fa-caret-left fa-fw me-1"></span></button>
                <button type="submit" class="btn btn-primary">儲存</button>
            </div>
            <div class="col-6">
           
            </div>
            <div class="col text-end">
                @*<button class="btn btn-primary">歷史</button>*@
            </div>
        </div>

        <div class="row mb-3">
            <div class="col">
                @Html.LabelFor(m => m.name, new { @class = "form-label form-view-hide" })
                @Html.TextBoxFor(m => m.name, new { @class = "form-control form-text" })
            </div>
            <div class="col">
                @Html.LabelFor(m => m.number, new { @class = "form-label" })
                @Html.TextBoxFor(m => m.number, new {@class = "form-control form-text"})
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-3">
                @Html.LabelFor(m => m.type, new { @class = "form-label" })
                @Html.DropDownListFor(m => m.type, CSHelper.Extensions.RenderingExtension.GetSelectList<ProjectType>(), new { @class = "form-select" })
            </div>
            <div class="col-9">
                @Html.LabelFor(m => m.subtypes, new { @class = "form-label" })
                @(Html.CheckBoxesFor(
                    m => m.subtypes, s => s.subtype_id,
                    (MultiSelectList)ViewData["subtypes"],
                    new { @class = "form-check" }, new { @class = "form-check-input" }, new { @class = "form-check-label" }))
            </div>
        </div>


        <div class="row mb-3">
            <div class="col-2">
                @Html.LabelFor(m => m.status, new { @class = "form-label" })
                @Html.DropDownListFor(m => m.status, CSHelper.Extensions.RenderingExtension.GetSelectList<ProjectStatus>(), new { @class = "form-select" })
            </div>
            <div class="col-2 mt-4">
                @*<button class="btn btn-secondary">轉出新案</button>*@
            </div>
            <div class="col-4">
                @Html.LabelFor(m => m.starting_datetime, new { @class = "form-label form-view-hide" })
                @Html.LocalDateTimeInputFor(m => m.starting_datetime, new { @class = "form-control", @step = "1" })
            </div>
            <div class="col-4">
                @Html.LabelFor(m => m.ending_datetime, new { @class = "form-label form-view-hide" })
                @Html.LocalDateTimeInputFor(m => m.ending_datetime, new { @class = "form-control", @step = "1" })
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-3">
                @Html.LabelFor(m => m.internal_company_id, new { @class = "form-label" })
                @Html.DropDownListFor(m => m.internal_company_id, (IEnumerable<SelectListItem>)ViewData["internal_company"], new { @class = "form-select" })
            </div>
            <div class="col-3">
                @Html.LabelFor(m => m.group_id, new { @class = "form-label" })
                @Html.DropDownListFor(m => m.group_id, (IEnumerable<SelectListItem>)ViewData["group"], new { @class = "form-select" })
            </div>
            <div class="col-3">
                @Html.LabelFor(m => m.user_id, new { @class = "form-label" })
                @Html.DropDownListFor(m => m.user_id, (IEnumerable<SelectListItem>)ViewData["sales_person"], new { @class = "form-select" })
            </div>
            <div class="col-3">
                @Html.LabelFor(m => m.importance_id, new { @class = "form-label" })
                @Html.DropDownListFor(m => m.importance_id, (IEnumerable<SelectListItem>)ViewData["importance"], new { @class = "form-select" })
            </div>
            <div class="col-6"></div>
        </div>

        <h5>客戶資料</h5>
        <div class="row mb-3">
            <div class="col-6">
                    @Html.LabelFor(m => m.company_id, new { @class = "form-label" })
                    <div class="input-group">
                    
                        @Html.HiddenFor(m => m.company_id, new { @class = "form-control",  @readonly = "readonly" } )
                        @Html.TextBoxFor(m => m.company.name, new { @class = "form-control",  @readonly = "readonly" })
                        <button type="button" class="btn btn-secondary btn-modal"
                                data-form-target ="#update"
                                id="change-company"
                                data-url="@Url.Action("Picker", "Company")"
                                data-toggle="modal"
                                data-target="#modal-popup">
                            <i class="fa fa-crosshairs fa-fw"></i>
                        </button>
                    </div>
            </div>
            <div class="col-6">
                    @Html.LabelFor(m => m.contact, new { @class = "form-label" })
                    <div class="input-group">
                        @Html.DropDownListFor(m => m.contact.name, (IEnumerable<SelectListItem>)ViewData["personas"], new { @class = "form-select" })
                    </div>
            </div>
        </div>

            <div class="row mb-3">
            <div class="col-6">
                @Html.LabelFor(m => m.contact_address, new { @class = "form-label" })
                @Html.TextBoxFor(m => m.contact_address, new {@class = "form-control form-text"})
            </div>
        
            <div class="col-5">
                @Html.LabelFor(m => m.contact_phone, new { @class = "form-label" })
                @Html.TextBoxFor(m => m.contact_phone, new {@class = "form-control form-text"})
            </div>

        </div>

        <div class="row mb-3">
            <div class="col">
                @Html.LabelFor(m => m.remarks, new { @class = "form-label" })
                @Html.TextAreaFor(m => m.remarks, new {@class = "form-control form-text"})
            </div>
        </div>

        <h5>截止日期表</h5>
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">@Html.LabelFor(m => m.timelines.FirstOrDefault().due_date, new { @class = "form-label" })</th>
                    <th scope="col">@Html.LabelFor(m => m.timelines.FirstOrDefault().desc, new { @class = "form-label" })</th>
                    <th scope="col">@Html.LabelFor(m => m.timelines.FirstOrDefault().complete_date, new { @class = "form-label" })</th>
                    <th scope="col">功能</th>
                </tr>
            </thead>
                <tbody>
                    <tr class="d-none" data-form-group-start="timelines" data-form-group="timelines">
                        <td scope="row">
                            @Html.TextBox("temp", DateTime.Now.ToString("yyyy-MM-dd"), new { @type="date", @class = "form-control", @data_form_group_subname = "due_date", @required="required" })
                        </td>
                        <td scope="row">
                            @Html.TextBox("temp", "", new { @class = "form-control", @data_form_group_subname = "item" })
                        </td>
                        <td scope="row">
                            @Html.TextBox("temp", "", new { @type="date", @class = "form-control", @data_form_group_subname = "complete_date" })
                        </td>
                        <td scope="row">
                            <button type="button" class="btn btn-secondary btn-delete">
                                <i class="fa fa-trash" aria-hidden="true"></i>
                            </button>
                        </td>
                    </tr>
                </tbody>
                <tfoot>
                    <tr>
                        <td>
                            <button class="btn btn-secondary" type="button" data-form-group-target="timelines">+新增</button>
                        </td>
                    </tr>
                </tfoot>
            </table>


        <h5>應收項目</h5>
        <!-- Incoming payment -->
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">@Html.LabelFor(m => m.incoming_payments.FirstOrDefault().due_date, new { @class = "form-label" })</th>
                    <th scope="col">@Html.LabelFor(m => m.incoming_payments.FirstOrDefault().item, new { @class = "form-label" })</th>
                    <th scope="col">@Html.LabelFor(m => m.incoming_payments.FirstOrDefault().amount, new { @class = "form-label" })</th>
                    <th scope="col">@Html.LabelFor(m => m.incoming_payments.FirstOrDefault().orderslip_number, new { @class = "form-label" })</th>
                    <th scope="col">@Html.LabelFor(m => m.incoming_payments.FirstOrDefault().invoice_number, new { @class = "form-label" })</th>
                    <th scope="col">功能</th>
                </tr>
            </thead>
            <tbody>
                <tr class="d-none" data-form-group-start="incoming_payments" data-form-group="incoming_payments">
                    <td scope="row">
                        @Html.TextBox("temp", DateTime.Now.ToString("yyyy-MM-dd"), new { @type="date", @class = "form-control", @data_form_group_subname = "due_date" })
                    </td>
                    <td scope="row">
                        @Html.TextBox("temp", "", new { @class = "form-control", @data_form_group_subname = "item" })
                    </td>
                    <td scope="row">
                        @Html.TextBox("temp", "", new { @class = "form-control", @data_form_group_subname = "amount" })
                    </td>
                    <td scope="row">
                        @Html.TextBox("temp", "", new { @class = "form-control", @data_form_group_subname = "orderslip_number" })
                    </td>
                    <td scope="row">
                        @Html.TextBox("temp", "", new { @class = "form-control", @data_form_group_subname = "invoice_number" })
                    </td>
                    <td scope="row">
                        <button type="button" class="btn btn-secondary btn-delete">
                            <i class="fa fa-trash" aria-hidden="true"></i>
                        </button>
                    </td>
                </tr>
            </tbody>
            <tfoot>
                <tr>
                    <td>
                        <button class="btn btn-secondary" type="button" data-form-group-target="incoming_payments">+新增</button>
                    </td>
                    <th class="text-end">
                        收入金額
                    </th>
                    <td>
                        $
                    </td>
              </tr>
            </tfoot>
        </table>

        <h5>應付項目</h5>
        <!-- Outgoing payment -->
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">@Html.LabelFor(m => m.outgoing_payments.FirstOrDefault().due_date, new { @class = "form-label" })</th>
                    <th scope="col">@Html.LabelFor(m => m.outgoing_payments.FirstOrDefault().company_id, new { @class = "form-label" })</th>
                    <th scope="col">@Html.LabelFor(m => m.outgoing_payments.FirstOrDefault().amount, new { @class = "form-label" })</th>
                    <th scope="col">功能</th>
                </tr>
            </thead>
            <tbody>
                <tr class="d-none" data-form-group-start="outgoing_payments" data-form-group="outgoing_payments">
                    <td scope="row">
                        @Html.TextBox("temp", DateTime.Now.ToString("yyyy-MM-dd"), new { @type="date", @class = "form-control", @data_form_group_subname = "due_date" })
                    </td>
                    <td scope="row">
                        <div class="input-group">
                            @Html.Hidden("temp", "", new { @class = "form-control",  @readonly = "readonly", @data_form_group_subname = "company_id" } )
                            @Html.TextBox("temp", "", new { @class = "form-control", @readonly = "readonly", @data_form_group_subname = "company.name" })
                            <button type="button" class="btn btn-secondary btn-modal"
                                    data-form-group-target="outgoing_payments"
                                    data-url="@Url.Action("Picker", "Company")"
                                    data-toggle="modal"
                                    data-target="#modal-popup">
                                <i class="fa fa-crosshairs fa-fw"></i>
                            </button>
                        </div>
                    </td>
                    <td scope="row">
                        @Html.TextBox("temp", "", new { @class = "form-control", @data_form_group_subname = "amount" })
                    </td>
                    <td scope="row">
                        <button type="button" class="btn btn-secondary btn-delete">
                            <i class="fa fa-trash" aria-hidden="true"></i>
                        </button>
                    </td>
                </tr>
            </tbody>
            <tfoot>
                <tr>
                    <td>
                        <button class="btn btn-secondary" type="button" data-form-group-target="outgoing_payments">+新增</button>
                    </td>
                    <th class="text-end">
                        付出金額
                    </th>
                    <td>
                        $
                    </td>
                </tr>
                <tr>
                    <td>

                    </td>
                    <th class="text-end">
                         淨利
                    </th>
                    <td>
                        $
                    </td>
                </tr>
            </tfoot>
        </table>


        <!-- Product List -->
        <h5>設備/授權/服務清單</h5>
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">@Html.LabelFor(m => m.products.FirstOrDefault().product.category, new { @class = "form-label" })</th>
                    <th scope="col">@Html.LabelFor(m => m.products.FirstOrDefault().product.brand.name, new { @class = "form-label" } )</th>
                    <th scope="col">@Html.LabelFor(m => m.products.FirstOrDefault().product.model_name, new { @class = "form-label" })</th>
                    <th scope="col">@Html.LabelFor(m => m.products.FirstOrDefault().serial_number, new { @class = "form-label" })</th>
                    <th scope="col">功能</th>
                </tr>
            </thead>
            <tbody>
                <tr class="d-none" data-form-group-start="products" data-form-group="products">
                    <td scope="row">
                        @Html.TextBox("temp", "", new { @class = "form-control", @readonly="readonly", @data_form_group_subname = "category" })
                    </td>
                    <td scope="row">
                        @Html.TextBox("temp", "", new { @class = "form-control", @readonly="readonly", @data_form_group_subname = "product.brand.name" })
                    </td>
                    <td scope="row">
                        <div class="input-group">
                            @Html.Hidden("temp", "", new { @data_form_group_subname = "product_id" } )
                            @Html.TextBox("temp","", new { @class = "form-control", @readonly="readonly", @data_form_group_subname = "product.model_name" })
                            <button type="button" class="btn btn-secondary btn-modal"
                                    data-form-group-target="products"
                                    data-url="@Url.Action("Picker", "Product")"
                                    data-toggle="modal"
                                    data-target="#modal-popup">
                                <i class="fa-solid fa-pen-to-square"></i>
                            </button>
                        </div>
                    </td>
                    <td scope="row">
                        @Html.TextBox("temp", "", new { @class = "form-control", @data_form_group_subname = "serial_number" })
                    </td>
                    <td scope="row">
                        <button type="button" class="btn btn-secondary" onclick="formGroupRemove(this)">
                            <i class="fa fa-trash" aria-hidden="true"></i>
                        </button>
                    </td>
                </tr>
            </tbody>
            <tfoot>
                <tr>
                    <td>
                        <button class="btn btn-secondary" type="button" data-form-group-target="products">+新增</button>
                    </td>
                </tr>
            </tfoot>
        </table>


    </form>
        
</div>

@section Scripts {
    <script>
        $(function () {

            var $btnAddDiscount = $('#change-company');
            $btnAddDiscount.on('modal-success', (evt, $formTarget, data) => {
                console.log($formTarget.find('#persona_name'))
                console.log(data.company_id)
                UpdatePersona($formTarget.find('#persona_name'), data.company_id)
            });

            var form = $('#update');
            form.initAsAjaxForm({
                success: function (data) {
                    var result = createErrorList(data);
                    if (result == null) {
                        window.history.back();
                    } else {
                        var alert = form.find(".alert");
                        alert.html(result);
                        alert.removeClass('d-none');
                    }
                },
                error: function (xhr, textStatus, errorThrown) {
                    var alert = form.find(".alert");
                    alert.text(AjaxErrorToString(xhr, textStatus, errorThrown));
                    alert.removeClass('d-none');
                },
                validate: function () {
                    return null
                }
            });
        });

        function UpdateBrandModelList(_this) 
        {
            var _prod = _this.value;
            UpdateBrand(_prod, _this);
            UpdateModel(_prod, _this);
            
        }
        function UpdateBrand(_prod, _this)
        {
            var $target = $(_this).closest('[data-form-group]').find('.select-brand')
            $target.loadSelect(
                '@HttpUtility.JavaScriptStringEncode(Url.Action("ListBrandForCategory", "Project"))',
                { ID: _prod });
        }

        function UpdatePersona(_persona, _comp) {
            var $target = _persona
            $target.loadSelect(
                '@HttpUtility.JavaScriptStringEncode(Url.Action("ListPersonaPerCompany", "Project"))',
                { ID: _comp });
        }

        function UpdateModel(_prod, _this)
        {
            var $target = $(_this).closest('[data-form-group]').find('.select-model')
            $target.loadSelect(
                '@HttpUtility.JavaScriptStringEncode(Url.Action("ListModelForCategory", "Project"))',
                { ID: _prod });
        }
    </script>
}