@model projectman.Models.Contact
@using CSHelper.Extensions
@{
    ViewData["Title"] = "新增個⼈";
    Layout = "_Layout";
}

<div class="container h-100 d-flex flex-column">
    <div class="row mb-3 mt-4">
        <div class="col">
            <button type="button" class="btn btn-light btn-back"><i class="fas fa-caret-left"></i></button>
            <h2>@ViewData["Title"]</h2>
        </div>
    </div>
    <form id="update" asp-action="New">
        @Html.AntiForgeryToken()
        <div class="row mb-3">
            <div class="col">
                @Html.LabelFor(m => m.name, new { @class = "form-label form-view-hide" })
                @Html.TextBoxFor(m => m.name, new { @class = "form-control form-text" })
            </div>
            <div class="col">
                @Html.LabelFor(m => m.department, new { @class = "form-label form-view-hide" })
                @Html.TextBoxFor(m => m.department, new { @class = "form-control form-text" })
            </div>
        </div>

        <div class="row mb-3">
            <div class="col">
                @Html.LabelFor(m => m.remarks, new { @class = "form-label form-view-hide" })
                @Html.TextAreaFor(m => m.remarks, new { @class = "form-control form-text" })
            </div>
        </div>

        <div class="row mb-3">
            <div class="col">
                @Html.LabelFor(m => m.phones, new { @class = "form-label" })

                <div class="row mb-1" data-form-group-start="phones">
                    <div class="col-auto">
                        <div class="row mb-1 d-none" data-form-group="phones">
                            <div class="col-auto">
                                @Html.DropDownList("temp", CSHelper.Extensions.RenderingExtension.GetSelectList<PhoneType>(), new { @class = "form-select", @data_form_group_subname = "type" })
                            </div>
                            <div class="col-5">
                                <div class="row">
                                    <div class="col">
                                        @Html.TextBox("temp", "", new { @class = "form-control", @data_form_group_subname = "number", @type = "tel" })
                                    </div>
                                    <div class="col-auto">
                                        <div class="form-check">
                                            @Html.CheckBox("temp", new {@class = "form-check-input", @data_form_group_subname = "is_default" })
                                            @Html.LabelFor(m => m.phones.FirstOrDefault().is_default)
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-auto">
                                <button type="button" class="btn btn-secondary" onclick="formGroupRemove(this)">
                                    <i class="fa fa-trash" aria-hidden="true"></i>
                                </button>
                            </div>
                        </div>
                        <button class="btn btn-primary" type="button" onclick="formGroupAdd(this)">+ 增加</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col">
                @Html.LabelFor(m => m.addresses, new { @class = "form-label" })

                <div class="row mb-1" data-form-group-start="addresses">
                    <div class="col-auto">
                        <div class="row mb-1 d-none" data-form-group="addresses">
                            <div class="col-auto">
                                @Html.DropDownList("temp", CSHelper.Extensions.RenderingExtension.GetSelectList<ContactAddressType>(), new { @class = "form-select", @data_form_group_subname = "type" })
                            </div>
                            <div class="col-5">
                                @Html.TextBox("temp", "", new { @class = "form-control", @data_form_group_subname = "addr" })
                            </div>
                            <div class="col-auto">
                                <button type="button" class="btn btn-secondary" onclick="formGroupRemove(this)">
                                    <i class="fa fa-trash" aria-hidden="true"></i>
                                </button>
                            </div>
                        </div>
                        <button class="btn btn-primary" type="button" onclick="formGroupAdd(this)">+ 增加</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col">
                @Html.LabelFor(m => m.emails, new { @class = "form-label" })

                <div class="row mb-1" data-form-group-start="emails">
                    <div class="col-auto">
                        <div class="row mb-1 d-none" data-form-group="emails">
                            <div class="col-auto">
                                @Html.DropDownList("temp", CSHelper.Extensions.RenderingExtension.GetSelectList<ContactAddressType>(), new { @class = "form-select", @data_form_group_subname = "type" })
                            </div>
                            <div class="col-5">
                                @Html.TextBox("temp", "", new { @class = "form-control", @data_form_group_subname = "email", @type = "emailaddress" })
                            </div>
                            <div class="col-auto">
                                <button type="button" class="btn btn-secondary" onclick="formGroupRemove(this)">
                                    <i class="fa fa-trash" aria-hidden="true"></i>
                                </button>
                            </div>
                        </div>
                        <button class="btn btn-primary" type="button" onclick="formGroupAdd(this)">+ 增加</button>
                    </div>
                </div>
            </div>
        </div>

        <h4>單位</h4>
        <table class="table mb-3">
            <thead>
                <tr>
                    <th scope="col">@Html.DisplayNameFor(m => m.companies.FirstOrDefault().company_id)</th>
                    <th scope="col">@Html.DisplayNameFor(m => m.companies.FirstOrDefault().job_title)</th>
                    <th scope="col">功能</th>
                </tr>
            </thead>
            <tbody>
                
                <tr class="d-none" data-form-group-start="companies" data-form-group="companies">
                    <td scope="row">
                        <div class="input-group">
                            @Html.Hidden("temp", ViewData["company_id"], new {  @class = "form-control",  @readonly = "readonly", @data_form_group_subname = "company_id" } )
                            @Html.TextBox("temp", ViewData["company_name"], new { @class = "form-control",  @readonly = "readonly", @data_form_group_subname = "company.name" })
                            <button type="button" class="btn btn-secondary btn-modal"
                                    data-form-group-target="companies"
                                    data-url="@Url.Action("PickerWithoutIndividual", "Company")"
                                    data-toggle="modal"
                                    data-target="#modal-popup">
                                <i class="fa fa-pen"></i>
                            </button>
                        </div>
                    </td>
                    <td>@Html.TextBox("temp", "", new { @class = "form-control", @data_form_group_subname = "job_title" })</td>
                    <td>
                        <button type="button" class="btn btn-delete">
                            <i class="fa fa-trash" aria-hidden="true"></i>
                        </button>
                    </td>
                </tr>
            </tbody>
        </table>
        <button class="btn btn-secondary mb-4" type="button" data-form-group-target="companies">新增單位</button>

        <div class="alert alert-danger d-none" role="alert">
        </div>

        <div class="row mb-4 mt-4">
            <div class="col">
                <button type="submit" class="btn btn-primary">新增</button>
            </div>
        </div>
    </form>
</div>
@section Scripts {

    <script>
// Handle phone checkboxes - make them work like radio buttons
        $(document).on('click', '[data-form-group=phones] .form-check-input', function ($this) {
            deselectAll($this);
        });

        function deselectAll($t) {
            let $default_selected = $t.target.name
            $('[data-form-group=phones] .form-check-input').each(function(){
                let $me = $(this);
                if ($me[0].name != $default_selected && $me[0].name != "temp"){
                    console.log($me[0]);
                    $($me[0]).prop("checked", false)
                }
            })
        }
// end phone checkboxes
        $(function () {
            var form = $('#update');
            form.initAsAjaxForm({
                success: function (data) {
                    var result = createErrorList(data);
                    if (result == null) {
                        window.opener.postMessage({ contact: data }, '*');
                        window.history.back();
                        window.close();
                    } else {
                        var alert = form.find(".alert");
                        alert.html(result);
                        alert.removeClass('d-none');
                    }
                },
                error: function (xhr, textStatus, errorThrown) {
                    var alert = form.find(".alert");
                    alert.text(AjaxErrorToString(xhr, textStatus, errorThrown));
                    alert.removeClass('d-none');
                },
                validate: function () {
                    return null
                }
            });
        });

    </script>
}
