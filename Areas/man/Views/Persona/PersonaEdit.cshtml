@model repairman.Models.PersonaModel
@using CSHelper.Extensions
@{
    ViewData["Title"] = "更新個⼈";
    Layout = "_Layout";
}

<div class="container h-100 d-flex flex-column">
    <div class="row mb-3 mt-4">
        <div class="col">
            <button type="button" class="btn btn-light btn-back"><i class="fas fa-caret-left"></i></button>
            <h2>@ViewData["Title"]</h2>
        </div>
    </div>
    <form id="update" asp-action="PersonaUpdate" asp-route-id="@Model.ID">
        @Html.AntiForgeryToken()
        <div class="container text-center">
            <div class="row mt-4">
                <div class="col text-start">
                    @Html.LabelFor(m => m.name, new { @class = "form-label form-view-hide" })
                    @Html.TextBoxFor(m => m.name, new { @class = "form-control form-text", @Value = Model.name })
                </div>
            </div>
            <div class="row mt-4">
                <div class="col-3 text-start">
                    @Html.LabelFor(m => m.department, new { @class = "form-label form-view-hide" })
                    @Html.TextBoxFor(m => m.department, new { @class = "form-control form-text", @Value = Model.department })
                </div>
                <div class="col-6"></div>
            </div>
            <div class="row mt-4">
                <div class="col-4 text-start">
                    @Html.LabelFor(m => m.remarks, new { @class = "form-label form-view-hide" })
                    @Html.TextAreaFor(m => m.remarks, new { @class = "form-control form-text", @Value = Model.remarks })
                </div>
                <div class="col-8"></div>
            </div>
            <!-- FOR EACH PHONE -->
            <div class="row mt-4">
                <div class="col text-start">
                    @Html.LabelFor(m => m.phone, new { @class = "form-label" })
                </div>
                @for (var i = 0; i < Model.phone.Count(); i++)
                {
                    <div class="row mb-1" data-form-group="phone">
                        <div class="col-auto">
                            @Html.DropDownListFor(m => m.phone[i].type, CSHelper.Extensions.RenderingExtension.GetSelectList<PhoneType>(), new { @class = "form-select form-control", @data_form_group_subname = "type" })
                        </div>
                        <div class="col-auto">
                            @Html.TextBoxFor(m => m.phone[i].number, new { @class = "form-control", @data_form_group_subname = "number" })
                        </div>
                        <div class="col-auto">
                            <div class="form-check">
                                @Html.CheckBoxFor(m => m.phone[i].default_number, new {@class = "form-check-input", @data_form_group_subname = "default_number" })
                                @Html.LabelFor(m => m.phone.FirstOrDefault().default_number)
                            </div>
                        </div>
                        <div class="col-auto">
                            @Html.HiddenFor(m => m.phone[i].ID)
                            @Html.Hidden("phone.Index", i)
                            <button type="button" class="btn btn-secondary" onclick="formGroupRemove(this)">
                                <i class="fa fa-trash" aria-hidden="true"></i>
                            </button>
                        </div>
                    </div>
                }
                <div class="row mb-1" data-form-group-start="phone">
                    <div class="col-auto">
                        <div class="row mb-1 d-none" data-form-group="phone">
                            <div class="col-auto">
                                @Html.DropDownList("temp", CSHelper.Extensions.RenderingExtension.GetSelectList<PhoneType>(), new { @class = "form-select", @data_form_group_subname = "type" })
                            </div>
                            <div class="col-auto">
                                @Html.TextBox("temp", "", new { @class = "form-control", @data_form_group_subname = "number", @type = "tel" })
                            </div>
                            <div class="col-auto">
                                <div class="form-check">
                                    @Html.CheckBox("temp", new {@class = "form-check-input", @data_form_group_subname = "default_number" })
                                    @Html.LabelFor(m => m.phone.FirstOrDefault().default_number)
                                </div>
                            </div>
                            <div class="col-auto">
                                <button type="button" class="btn btn-secondary" onclick="formGroupRemove(this)">
                                    <i class="fa fa-trash" aria-hidden="true"></i>
                                </button>
                            </div>
                        </div>
                        <button class="btn btn-primary" type="button" onclick="formGroupAdd(this)">+ 增加</button>
                    </div>
                </div>
            </div>
           <!-- END FOR EACH PHONES -->
           <!-- FOR EACH ADDRESS -->
            <div class="row mt-4">
                <div class="col text-start">
                    
                        @Html.LabelFor(m => m.address, new { @class = "form-label" })
                    
                </div>

                @for (var i = 0; i < Model.address.Count(); i++)
                {
                    <div class="row mb-1" data-form-group="address">
                        <div class="col-auto">
                            @Html.DropDownListFor(m => m.address[i].type, CSHelper.Extensions.RenderingExtension.GetSelectList<ContactType>(), new { @class = "form-select form-control", @data_form_group_subname = "type" })
                        </div>
                        <div class="col-auto">
                            @Html.TextBoxFor(m => m.address[i].addr, new { @class = "form-control", @data_form_group_subname = "addr" })
                        </div>
                        <div class="col-auto">
                            @Html.HiddenFor(m => m.address[i].ID)
                            @Html.Hidden("address.Index", i)
                            <button type="button" class="btn btn-secondary" onclick="formGroupRemove(this)">
                                <i class="fa fa-trash" aria-hidden="true"></i>
                            </button>
                        </div>
                    </div>
                }
                <div class="row mb-1" data-form-group-start="address">
                    <div class="col-auto">
                        <div class="row mb-1 d-none" data-form-group="address">
                            <div class="col-auto">
                                @Html.DropDownList("temp", CSHelper.Extensions.RenderingExtension.GetSelectList<ContactType>(), new { @class = "form-select", @data_form_group_subname = "type" })
                            </div>
                            <div class="col-auto">
                                @Html.TextBox("temp", "", new { @class = "form-control", @data_form_group_subname = "addr" })
                            </div>
                            <div class="col-auto">
                                <button type="button" class="btn btn-secondary" onclick="formGroupRemove(this)">
                                    <i class="fa fa-trash" aria-hidden="true"></i>
                                </button>
                            </div>
                        </div>
                        <button class="btn btn-primary" type="button" onclick="formGroupAdd(this)">+ 增加</button>
                    </div>
                </div>
            </div>
            <!-- END FOR EACH ADDRESS-->
            
            <!-- FOR EACH EMAIL -->
            <div class="row mt-4">
                <div class="col text-start">
                    
                    
                        @Html.LabelFor(m => m.email, new { @class = "form-label" })
                    
                </div>

                @for (var i = 0; i < Model.email.Count(); i++)
                {
                    <div class="row mb-1" data-form-group="email">
                        <div class="col-auto">
                            @Html.DropDownListFor(m => m.email[i].type, CSHelper.Extensions.RenderingExtension.GetSelectList<ContactType>(), new { @class = "form-select form-control", @data_form_group_subname = "type" })
                        </div>
                        <div class="col-auto">
                            @Html.TextBoxFor(m => m.email[i].email, new { @class = "form-control", @data_form_group_subname = "email" })
                        </div>
                        <div class="col-auto">
                            @Html.HiddenFor(m => m.email[i].ID)
                            @Html.Hidden("email.Index", i)
                            <button type="button" class="btn btn-secondary" onclick="formGroupRemove(this)">
                                <i class="fa fa-trash" aria-hidden="true"></i>
                            </button>
                        </div>
                    </div>
                }
                <div class="row mb-1" data-form-group-start="email">
                    <div class="col-auto">
                        <div class="row mb-1 d-none" data-form-group="email">
                            <div class="col-auto">
                                @Html.DropDownList("temp", CSHelper.Extensions.RenderingExtension.GetSelectList<ContactType>(), new { @class = "form-select", @data_form_group_subname = "type" })
                            </div>
                            <div class="col-auto">
                                @Html.TextBox("temp", "", new { @class = "form-control", @data_form_group_subname = "email" })
                            </div>
                            <div class="col-auto">
                                <button type="button" class="btn btn-secondary" onclick="formGroupRemove(this)">
                                    <i class="fa fa-trash" aria-hidden="true"></i>
                                </button>
                            </div>
                        </div>
                        <button class="btn btn-primary" type="button" onclick="formGroupAdd(this)">+ 增加</button>
                    </div>
                </div>
            </div>
            <!-- END FOR EACH EMAIL-->
            
            <table class="table mt-4">
                <thead>
                    <tr>
                        <th scope="col">@Html.LabelFor(m => m.personas_company.FirstOrDefault().company_id, new { @class = "form-label" })</th>
                        <th scope="col">@Html.LabelFor(m => m.personas_company.FirstOrDefault().job_title, new { @class = "form-label" })</th>
                        <th scope="col">功能</th>
                    </tr>
                </thead>
                <tbody>
                    
                    @for (var i = 0; i < Model.personas_company.Count(); i++){
                        <tr data-form-group="personas_company">
                        <td scope="row">
                            <div class="input-group">
                                @Html.HiddenFor(m => m.personas_company[i].company_id, new { @data_form_group_subname = "company_id" } )
                                @Html.HiddenFor(m => m.personas_company[i].ID)
                                @Html.Hidden("personas_company.Index", i)
                                <div class="input-group flex-nowrap">
                                    @Html.TextBoxFor(m => m.personas_company[i].company.name, "", new { @class = "form-control",  @readonly = "readonly", @data_form_group_subname = "company.name" })
                                    <button type="button" class="btn btn-secondary btn-modal"
                                        data-form-group-target="personas_company"
                                        data-url="@Url.Action("Picker", "Company")"
                                        data-toggle="modal"
                                        data-target="#modal-popup">
                                        <i class="fa fa-pen"></i>
                                    </button>
                                </div>
                            </div>
                        </td>
                            <td>@Html.TextBoxFor(m => m.personas_company[i].job_title, "", new { @class = "form-control", @data_form_group_subname = "job_title" })</td>
                        <td>
                                <button type="button" class="btn btn-secondary" onclick="formGroupRemove(this)">
                                    <i class="fa fa-trash" aria-hidden="true"></i>
                                </button>
                        </td>
                    </tr>
                    }
           
                    <tr class="d-none" data-form-group-start="personas_company" data-form-group="personas_company">
                        <td scope="row">
                            <div class="input-group">
                                @Html.Hidden("temp", "", new { @data_form_group_subname = "company_id" } )
                                @Html.TextBox("temp", "", new { @class = "form-control",  @readonly = "readonly", @data_form_group_subname = "company.name" })
                                <button type="button" class="btn btn-secondary btn-modal"
                                        data-form-group-target="personas_company"
                                        data-url="@Url.Action("Picker", "Company")"
                                        data-toggle="modal"
                                        data-target="#modal-popup">
                                    <i class="fa fa-pen"></i>
                                </button>
                            </div>
                        </td>
                        <td>@Html.TextBox("temp", "", new { @class = "form-control", @data_form_group_subname = "job_title" })</td>
                        <td>
                            <button type="button" class="btn btn-delete">
                                <i class="fa fa-trash" aria-hidden="true"></i>
                            </button>
                        </td>
                    </tr>

                </tbody>
            </table>
            <button class="btn btn-secondary" type="button" data-form-group-target="personas_company">新增成員</button>

            <div class="alert alert-danger d-none" role="alert">
            </div>
            <br />
            <br />
            <button type="submit" class="btn btn-primary mb-4 mt-4">更新</button>
        </div>
    </form>
</div>
@section Scripts {

    <script>
        // Handle phone checkboxes - make them work like radio buttons
        $(document).on('click', '[data-form-group=phone] .form-check-input', function ($this) {
            deselectAll($this);
        });

        function deselectAll($t) {
            let $default_selected = $t.target.name
            $('[data-form-group=phone] .form-check-input').each(function () {
                let $me = $(this);
                if ($me[0].name != $default_selected && $me[0].name != "temp") {
                    console.log($me[0]);
                    $($me[0]).prop("checked", false)
                }
            })
        }
        // end phone checkboxes
        $(function () {

            var form = $('#update');
            form.initAsAjaxForm({
                success: function (data) {
                    var result = createErrorList(data);
                    if (result == null) {
                        window.history.back();
                    } else {
                        var alert = form.find(".alert");
                        alert.html(result);
                        alert.removeClass('d-none');
                    }
                },
                error: function (xhr, textStatus, errorThrown) {
                    var alert = form.find(".alert");
                    alert.text(AjaxErrorToString(xhr, textStatus, errorThrown));
                    alert.removeClass('d-none');
                },
                validate: function () {
                    return null
                }
            });
        });

    </script>
    }

