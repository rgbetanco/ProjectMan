@model projectman.Models.Invoice
@using CSHelper.Extensions
@{
    ViewBag.company_id = -1;
    ViewData["Title"] = "發票";
    Layout = "_Layout";
}

<div class="container h-100 d-flex flex-column">
    <div class="row mb-3 mt-4">
        <div class="col">
            <button type="button" class="btn btn-light btn-back mb-2"><i class="fas fa-caret-left"></i></button>
            <h2>@ViewData["Title"]</h2>
        </div>
    </div>
    <form id="update" asp-action="Update" asp-route-id="@Model.ID">
        @Html.AntiForgeryToken()
        <div class="container text-center">
            <div class="row mt-4">
                <div class="col text-start">
                    @Html.LabelFor(m => m.company, new { @class = "form-label form-view-hide" })
                    <div class="input-group">
                        @Html.HiddenFor(m => m.company_id, new {  @class = "form-control",  @readonly = "readonly", @data_form_group_subname = "company_id" } )
                        @Html.TextBoxFor(m => m.company.name, new { @class = "form-control",  @readonly = "readonly", @data_form_group_subname = "company.name" })
                        <button type="button" class="btn btn-secondary btn-modal"
                                data-form-target="#update"
                                id="change-company"
                                data-url="@Url.Action("Picker", "Company")"
                                data-toggle="modal"
                                data-target="#modal-popup">
                            <i class="fa fa-pen"></i>
                        </button>
                    </div>
                </div>
                <div class="col text-start">
                    @Html.LabelFor(m => m.number, new { @class = "form-label form-view-hide" })
                    @Html.TextBoxFor(m => m.number, new { @class = "form-control form-text" })
                </div>
                <div class="col text-start">
                    @Html.LabelFor(m => m.issue_date, new { @class = "form-label form-view-hide" })
                    @Html.LocalDateTimeInputFor(m => m.issue_date, new { @class = "form-control", @step = "1" })
                </div>
                <div class="col text-start">
                    @Html.LabelFor(m => m.total_amount, new { @class = "form-label form-view-hide" })
                    @Html.TextBoxFor(m => m.total_amount, new { @class = "form-control form-text" })
                </div>
                
            </div>
            <div class="row mt-4">
                <div class="col-6 text-start">
                    @Html.LabelFor(m => m.created, new { @class = "form-label form-view-hide" })
                    @Html.TextBoxFor(m => m.created, new { @class = "form-control form-text", @readonly = "readonly" })
                </div>
            </div>
            <table class="table mt-4">
                <thead>
                    <tr>
                        <th scope="col">@Html.LabelFor(m => m.items.FirstOrDefault().incoming_payment.item, new { @class = "form-label" })</th>
                        <th scope="col">@Html.LabelFor(m => m.total_amount, new { @class="form-label"})</th>
                        <th scope="col">功能</th>
                    </tr>
                </thead>
                <tbody>
                    @for (var i = 0; i < Model.items.Count(); i++)
                    {
                        <tr data-form-group="invoice_item">
                            <td scope="row">
                                <div class="input-group">
                                    @Html.HiddenFor(m => m.items[i].incoming_payment_id, new { @data_form_group_subname = "incoming_payment_id"})
                                    @Html.TextBoxFor(m => m.items[i].incoming_payment.item, new { @class = "form-control",  @readonly = "readonly", @data_form_group_subname = "item" })
                                    <button type="button" class="btn btn-secondary btn-modal change-item"
                                        data-form-group-target="invoice_item"
                                        id="change-item"
                                        data-url='@Url.Action("Picker", "Project")'
                                        data-toggle="modal"
                                        data-target="#modal-popup">
                                        <i class="fa fa-crosshairs fa-fw"></i>
                                    </button>
                                </div>
                            </td>
                            <td scope="row">
                                @Html.TextBoxFor(m => m.items[i].amount, new { @class = "form-control", @data_form_group_subname = "amount", @readonly="readonly" })
                            </td>
                            <td scope="row">
                                @Html.HiddenFor(m => m.items[i].ID)
                                @Html.Hidden("invoice_item.Index", i)
                                <button type="button" class="btn btn-secondary" onclick="RemoveItem(this)">
                                    <i class="fa fa-trash" aria-hidden="true"></i>
                                </button>
                            </td>
                        </tr>
                    }
                    <tr class="d-none" data-form-group-start="invoice_item" data-form-group="invoice_item">
                        <td scope="row">
                            <div class="input-group">
                                @Html.Hidden("temp", "", new { @data_form_group_subname = "incoming_payment_id"})
                                @Html.TextBox("temp","", new { @class = "form-control",  @readonly = "readonly", @data_form_group_subname = "item" })
                                <button type="button" class="btn btn-secondary btn-modal change-item"
                                        data-form-group-target="invoice_item"
                                        id="change-item"
                                        data-url='@Url.Action("Picker", "Project")'
                                        data-toggle="modal"
                                        data-target="#modal-popup">
                                    <i class="fa fa-crosshairs fa-fw"></i>
                                </button>
                            </div>
                        </td>
                        <td scope="row">
                            @Html.TextBox("temp", "0", new { @class = "form-control", @data_form_group_subname = "amount", @readonly="readonly" })
                        </td>
                        <td scope="row">
                            <button type="button" class="btn btn-secondary" onclick="RemoveItem(this)">
                                <i class="fa fa-trash" aria-hidden="true"></i>
                            </button>
                        </td>
                    </tr>
                </tbody>
                <tfoot>
                    <tr>
                        <td>總計</td>
                        <td><input type="text" class="form-control" disabled id="total" value="0" /></td>
                    </tr>
                </tfoot>
            </table>
            <button class="btn btn-secondary" type="button" data-form-group-target="invoice_item">+ 增加</button>

            <br />
            <br />
            <button type="submit" class="btn btn-primary mb-4 mt-4">新增</button>

        </div>
    </form>
</div>
@section Scripts {

    <script>

        $(window).on("load",function(){
            UpdatePrice()
        });

        $(function () {

            var form = $('#update');
            form.initAsAjaxForm({
                success: function (data) {
                    var result = createErrorList(data);
                    if (result == null) {
                        window.history.back();
                    } else {
                        var alert = form.find(".alert");
                        alert.html(result);
                        alert.removeClass('d-none');
                    }
                },
                error: function (xhr, textStatus, errorThrown) {
                    var alert = form.find(".alert");
                    alert.text(AjaxErrorToString(xhr, textStatus, errorThrown));
                    alert.removeClass('d-none');
                },
                validate: function () {
                    return null
                }
            });
        });

        

        $(function () {

            var $btnChangeCompany = $('#change-company');
            $btnChangeCompany.on('modal-success', (evt, $formTarget, data) => {

                $(".change-item").attr("data-url", "@Url.Action("Picker", "Project")?company_id=" + data.company_id)

            });

            var $btnChangeItem = $('#change-item');
            $btnChangeItem.on('modal-success', (evt, $formTarget, data) => {
                $t = parseFloat($("#total").val());
                $("#total").val($t + parseFloat(data.amount));

            });

            var $form = $('#update');
            $form.on('form-group-added', evt => UpdatePrice());
            $form.on('form-group-removed', evt => setTimeout(() => UpdatePrice()));
        })

        function RemoveItem(_this) {
            formGroupRemove(_this)
        }

        function UpdatePrice() {
            var $form = $('#update');
            $("#total").val(0)

            $form.find(':visible[data-form-group="invoice_item"]').each(function () {
                $this = $(this);
                let $subtotalRaw = $this.find('input[data-form-group-subname="amount"]')
                let subtotal = parseFloat($subtotalRaw.val())
                $t = parseFloat($("#total").val());
                $("#total").val($t + subtotal);
                
            });
        }

    </script>
}